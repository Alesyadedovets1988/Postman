{
	"info": {
		"_postman_id": "cdf201b9-298f-4add-91f3-b825227fcbd4",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2nd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1.Отправить запрос\r",
							"//2. Статус код 200\r",
							" pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json\r",
							"var jsonData=pm.response.json();\r",
							"//4. Проверить, что name в ответе равно name с request (name вбить руками)\r",
							"pm.test(\"name\", function () {\r",
							"   pm.expect(jsonData.name).to.eql(\"Alesya\");\r",
							"});\r",
							"//5. Проверить, что age в ответе равно age с request (age вбить руками)\r",
							"pm.test(\"age\", function (){\r",
							"       pm.expect(jsonData.age).to.eql(\"32\");\r",
							"});\r",
							"//6. Проверить, что salary в ответе равно salary с request (salary вбить руками)\r",
							"pm.test (\"salary\", function (){\r",
							"      pm.expect(jsonData.salary).to.eql(500);\r",
							"});\r",
							"//7. Спарсить request\r",
							"var request_Data=request.data;\r",
							"   //8. Проверить, что name в ответе равно name с request (name забрать из request )\r",
							"pm.test(\"namerequest\", function () {\r",
							"pm.collectionVariables.get(\"name\");\r",
							"});\r",
							"//9. Проверить, что age в ответе равно age с request (age забрать из request )\r",
							"pm.test(\"agerequest\", function () {\r",
							"pm.collectionVariables.get(\"age\");\r",
							"});\r",
							"//10. Проверить, что salary в ответе равно salary с request (salary забрать из request )\r",
							"pm.test(\"salaryrequest\", function () {\r",
							"pm.collectionVariables.get(\"salary\");\r",
							"});\r",
							"//11.Вывести в консоль параметр family из response\r",
							"var family=jsonData.family;\r",
							"console.log(family);\r",
							"//12. Проверить, что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test (\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(+request_Data.salary*4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alesya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesya",
							"disabled": true
						},
						{
							"key": "age",
							"value": "32",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "500",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3rd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json\r",
							"var jsonData=pm.response.json();\r",
							"//4. Спарсить request\r",
							"var request_Data=request.data;\r",
							"//5. Проверить, что name в ответе равно name из request(name забрать из request)\r",
							"pm.test(\"namerequest\", function () {\r",
							"pm.collectionVariables.get(\"name\");\r",
							"});\r",
							"//6. Проверить, что age в ответе равно age из request(age забрать из request)\r",
							"pm.test(\"agerequest\", function () {\r",
							"pm.collectionVariables.get(\"age\");\r",
							"});\r",
							"//7. Проверить, что salary в ответе равно salary из request(salary забрать из request)\r",
							"pm.test(\"salaryrequest\", function () {\r",
							"pm.collectionVariables.get(\"salary\");\r",
							"});\r",
							"//8. Вывести в консоль параметр family из response\r",
							"pm.test(\"family\", function () {\r",
							"    let family=pm.response.body;\r",
							"console.log (family)\r",
							"});\r",
							"//9. Проверить, что у параметра dog есть параметры name\r",
							"    pm.test(\"dog_have_name\", function () {\r",
							"     var jsonData=pm.response.json();\r",
							"   pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"//10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"dog_have_property_age\", function () {\r",
							"        pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//11. Проверить, что у параметра name есть параметры Luky\r",
							" pm.test(\"dogs_name\", function () {\r",
							"     pm.expect(jsonData.family.pets.dog.name).to.include(\"Luky\");\r",
							"});\r",
							"//12. Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"dogs_age\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Alesya&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4rd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос\r",
							"//2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3.Спарсить response body в json\r",
							"pm.test (\"parse_response\", function () {\r",
							"var jsonData=pm.response.json();\r",
							"});\r",
							"//4. Спарсить request\r",
							"pm.test (\"parse_response\", function () {\r",
							"var request_Data=request.data;\r",
							"});\r",
							"//5. Проверить, что name в ответе равно name с request (name забрать из request )\r",
							"pm.test (\"name\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"        console.log(jsonData);\r",
							"        var name_resp=jsonData.name;\r",
							"        console.log(name_resp);\r",
							"        var name_req=pm.request.url.query.toObject().name;\r",
							"        console.log (name_req);\r",
							"        pm.expect(name_resp).to.eql(name_req);\r",
							"        \r",
							"});\r",
							"//6.Проверить, что age в ответе равно age из request (age забрать из request )\r",
							"pm.test (\"age\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"        console.log(jsonData);\r",
							"        var age_resp=jsonData.age;\r",
							"        console.log(age_resp);\r",
							"        var age_req=pm.request.url.query.toObject().age;\r",
							"        console.log (age_req);\r",
							"        pm.expect(age_resp).to.eql(+age_req);\r",
							"        \r",
							"});\r",
							"//7.Вывести в консоль параметр salary из request\r",
							"pm.test (\"salary_console_req\", function () {\r",
							"var salary_req=pm.request.url.query.toObject().salary;\r",
							"console.log(salary_req);\r",
							"});\r",
							"//8.Вывести в консоль параметр salary из response\r",
							"pm.test (\"salary_console_resp\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"var salary_resp=jsonData.salary;\r",
							"console.log(salary_resp);\r",
							"});\r",
							"//9.Вывести в консоль 0-й элемент параметра salary из response\r",
							"pm.test (\"salary_console_resp_0\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"var salary_resp=jsonData.salary;\r",
							"console.log(salary_resp[0]);\r",
							"});\r",
							"//10.Вывести в консоль 1-й элемент параметра salary из response\r",
							"pm.test (\"salary_console_resp_1\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"var salary_resp=jsonData.salary;\r",
							"console.log(salary_resp[1]);\r",
							"});\r",
							"//11.Вывести в консоль 2-й элемент параметра salary из response\r",
							"pm.test (\"salary_console_resp_2\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"var salary_resp=jsonData.salary;\r",
							"console.log(salary_resp[2]);\r",
							"});\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
							"pm.test (\"salary_0_and_salary_from_request\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"        console.log(jsonData);\r",
							"        var salary_resp=jsonData.salary;\r",
							"        console.log(salary_resp);\r",
							"        var salary_req=pm.request.url.query.toObject().salary;\r",
							"        console.log (salary_req);\r",
							"        pm.expect(salary_resp[0]).to.eql(+salary_req);\r",
							"});\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test (\"salary_1_and_salary*2_from_request\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"        console.log(jsonData);\r",
							"        var salary_resp=jsonData.salary;\r",
							"        console.log(salary_resp);\r",
							"        var salary_req=pm.request.url.query.toObject().salary;\r",
							"        console.log (salary_req);\r",
							"        pm.expect(+salary_resp[1]).to.eql(salary_req*2);\r",
							"});\r",
							"//14.Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test (\"salary_2_and_salary*3_from_request\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"        console.log(jsonData);\r",
							"        var salary_resp=jsonData.salary;\r",
							"        console.log(salary_resp);\r",
							"        var salary_req=pm.request.url.query.toObject().salary;\r",
							"        console.log (salary_req);\r",
							"        pm.expect(+salary_resp[2]).to.eql(salary_req*3);\r",
							"});\r",
							"//15.Создать в окружении переменную name\r",
							"//16.Создать в окружении переменную age\r",
							"//17.Создать в окружении переменную salary\r",
							"//18.Передать в окружение переменную name\r",
							"pm.test(\"enviroment_name\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"    pm.environment.set(\"name\", jsonData.name);\r",
							"});\r",
							"//19.Передать в окружение переменную age\r",
							"pm.test(\"enviroment_age\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"    pm.environment.set(\"age\", jsonData.age);\r",
							"});\r",
							"//20.Передать в окружение переменную salary\r",
							"pm.test(\"enviroment_salary\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"    pm.environment.set(\"salary\", jsonData.salary);\r",
							"});\r",
							"//21.Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"pm.test(\"cycle_salary\", function () {\r",
							"    var jsonData=pm.response.json();\r",
							"\tfor (i = 0; i < jsonData.salary.length; i++){\t\t\t\t\t\r",
							"console.log(\"salary_cycle\", jsonData.salary[i])};\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alesya&age=32&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesya"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		}
	]
}